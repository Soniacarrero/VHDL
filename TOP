----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date: 28.06.2024 19:15:34
-- Design Name: 
-- Module Name: TOP - Structural
-- Project Name: 
-- Target Devices: 
-- Tool Versions: 
-- Description: 
-- 
-- Dependencies: 
-- 
-- Revision:
-- Revision 0.01 - File Created
-- Additional Comments:
-- 
----------------------------------------------------------------------------------


library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_arith.ALL;
use ieee.std_logic_unsigned.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity TOP is
    Port ( CLK : in STD_LOGIC; -- señal de reloj de la placa
           RESET_n : in STD_LOGIC; -- botón de reset negado
           BOTON : in STD_LOGIC_VECTOR (3 downto 0); -- botonera para elección de pisos
           aux : inout STD_LOGIC; -- variable de habilitación de la botonera
           s_PRESENCIA : in STD_LOGIC; -- sensor de presencia en la entrada al ascensor
           estado_PUERTA : in STD_LOGIC_VECTOR (1 downto 0); -- sesnor que detecta si está abierta o cerrada la puerta
           motor_PUERTA : out STD_LOGIC_VECTOR (1 downto 0); -- motor de las puertas del ascensor
           motor_ASCENSOR : inout STD_LOGIC_VECTOR (1 downto 0); --motor de subida/bajada del ascensor
           led : out STD_LOGIC_VECTOR (6 downto 0)); --leds del display
end TOP;

architecture Structural of TOP is

-- Signal para las variables que se emplean a modo de entrada/salida
signal clk_1: std_logic;
signal clk_2: std_logic;
signal piso_des: std_logic_vector (2 downto 0);
signal piso_est: std_logic_vector (2 downto 0);

-- Creamos componenetes para cada entidad
COMPONENT RELOJ
    Generic (
        fHz: integer:=50000000
    );
        
    Port ( clk_out : out STD_LOGIC;
           reset_n : in STD_LOGIC;
           clk_in : in STD_LOGIC);
end COMPONENT;


COMPONENT TRATAMIENTO_PISOS
    Port ( reset_n : in STD_LOGIC;
           boton : in STD_LOGIC_VECTOR (3 downto 0); 
           clk_pisos : in STD_LOGIC;
           aux : in STD_LOGIC;  -- hanilitación de la botonera
           motor : in STD_LOGIC_VECTOR (1 downto 0);   -- "10" =subir  "01" =bajar
           piso_deseado : out STD_LOGIC_VECTOR (2 downto 0);
           piso_estado : out STD_LOGIC_VECTOR (2 downto 0));
           
end COMPONENT;  


COMPONENT ASCENSOR_GENERAL
    Port ( clk : in STD_LOGIC;
           reset_n : in STD_LOGIC;
           piso_estado : in STD_LOGIC_VECTOR (2 downto 0);
           piso_deseado : in STD_LOGIC_VECTOR (2 downto 0);
           s_presencia : in STD_LOGIC;  -- "1" =presencia  "0" =no presencia
           s_puerta : in STD_LOGIC_VECTOR (1 downto 0);  -- "10" =abierta  "01" =cerrada
           aux : out STD_LOGIC;    -- hanilitación de la botonera
           motor_puertas : out STD_LOGIC_VECTOR (1 downto 0);   -- "10" =abrir  "01" =cerrar
           motor_ascensor : out STD_LOGIC_VECTOR (1 downto 0));  -- "10" =subir  "01" =bajar

end COMPONENT;


COMPONENT DISPLAY
    Port ( reset_n : in STD_LOGIC;
           clk_display : in STD_LOGIC;
           piso_estado : in STD_LOGIC_VECTOR (2 downto 0);
           led : out STD_LOGIC_VECTOR (6 downto 0)); -- Leds del display

end COMPONENT;     


begin

-- Se asocian las variables globales o señales a las variables locales de cada entidad

    reloj_1: RELOJ --CLK para la entidad del control general del ascensor
        GENERIC MAP (fHz => 100000000)
        PORT MAP (
            clk_in => CLK,
            reset_n => RESET_n,
            clk_out => clk_1
        );
        
    reloj_2: RELOJ --CLK para el tratamiento de pisos y el display
        GENERIC MAP (fHz => 150000000)
        PORT MAP (
            clk_in => CLK,
            reset_n => RESET_n,
            clk_out => clk_2
        );
        
    display_1:DISPLAY
        PORT MAP (
            clk_display => clk_2,
            reset_n => RESET_n,
            piso_estado => piso_est,
            led => led
        );
        
    tratamiento_pisos_1: TRATAMIENTO_PISOS
        PORT MAP (
            clk_pisos => clk_2,
            reset_n => RESET_n,
            motor => motor_ASCENSOR,
            piso_estado => piso_est,
            piso_deseado => piso_des,
            aux => aux,
            boton => BOTON
        );

    control_ascensor_general: ASCENSOR_GENERAL
        PORT MAP (
           clk => clk_1,
           reset_n => RESET_n,
           piso_estado => piso_est,
           piso_deseado => piso_des,
           s_presencia => s_PRESENCIA,
           s_puerta => estado_PUERTA,
           aux => aux,
           motor_puertas => motor_PUERTA,
           motor_ascensor => motor_ASCENSOR
        );
        
        
end Structural;
